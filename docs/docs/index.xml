<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Despliegue de  Aplicaciones Web – Recursos</title>
    <link>https://lmorillas.github.io/recursos-daw/docs/</link>
    <description>Recent content in Recursos on Despliegue de  Aplicaciones Web</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://lmorillas.github.io/recursos-daw/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Entorno básico con mod_wsgi</title>
      <link>https://lmorillas.github.io/recursos-daw/docs/python/entorno-basico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lmorillas.github.io/recursos-daw/docs/python/entorno-basico/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;Configurar la aplicación &lt;a href=&#34;https://github.com/josedom24/flask_temperaturas&#34;&gt;flask_temperaturas&lt;/a&gt; para que sea servida con apache2 + mod_wsgi. Explica los pasos más importantes y entrega una prueba de funcionamiento.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentación original: &lt;a href=&#34;https://fp.josedomingo.org/iaw2122/u03/modwsgi.html&#34;&gt;https://fp.josedomingo.org/iaw2122/u03/modwsgi.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h2 id=&#34;pasos-instalación&#34;&gt;Pasos instalación&lt;/h2&gt;
&lt;p&gt;Levanta una nueva máquina vagrant Ubuntu-20.04 e instala apache2, git, python3 y python3-venv&lt;/p&gt;
&lt;h3 id=&#34;clonar-el-repositorio&#34;&gt;Clonar el repositorio&lt;/h3&gt;
&lt;p&gt;En &lt;strong&gt;/home/vagrant/&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ git clone https://github.com/josedom24/flask_temperaturas.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;prepara-máquina-virtual-para-entornos-de-python&#34;&gt;Prepara máquina virtual para entornos de python&lt;/h3&gt;
&lt;p&gt;En &lt;strong&gt;/home/vagrant/&lt;/strong&gt; ejecuta:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ python3 -m venv env   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Crea un entorno virtual&lt;/span&gt;
$ &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; env/bin/activate  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Activa el entorno virtual&lt;/span&gt;
$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; flask_temperaturas
$ pip install -r requirements.txt  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Instala dependencias&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;instala-y-configura-el-módulo-wsgi-para-apache2&#34;&gt;Instala y configura el módulo wsgi para apache2&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt install libapache2-mod-wsgi-py3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Activa el módulo wsgi
Nuestra aplicación se encuentra en &lt;code&gt;/home/vagrant/flask_temperaturas&lt;/code&gt;.
Nuestro entorno virtual está en &lt;code&gt;/home/vagrant/env&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;creación-del-fichero-wsgi&#34;&gt;Creación del fichero wsgi&lt;/h3&gt;
&lt;p&gt;Lo primero que vamos a hacer es crear el fichero WSGI, que vamos a llamar &lt;code&gt;wsgi.py&lt;/code&gt; estará en &lt;code&gt;/home/vagrant/flask_temperaturas&lt;/code&gt; y tendrá el siguiente contenido:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from app import app as application
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Explicación:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;El primer &lt;code&gt;app&lt;/code&gt; corresponde con el nombre del módulo, es decir del fichero del programa, en nuestro caso se llama &lt;code&gt;app.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;El segundo &lt;code&gt;app&lt;/code&gt; corresponde a la aplicación flask creada en &lt;code&gt;app.py&lt;/code&gt;:  &lt;code&gt;app = Flask(__name__)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Importamos la aplicación flask, pero la llamamos &lt;code&gt;application&lt;/code&gt; necesario para que el servidor web pueda enviarle peticiones.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configuración-de-apache2&#34;&gt;Configuración de apache2&lt;/h3&gt;
&lt;p&gt;Yo he utilizado el virtualhost por defecto, si usamos otro virtualhost esta configuración ira en el fichero correspondiente:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-apache2&#34; data-lang=&#34;apache2&#34;&gt;    WSGIDaemonProcess flask_temp python-path=/home/vagrant/flask_temperaturas:/home/vagrant/env/lib/python3.9/site-packages
    WSGIProcessGroup flask_temp
    WSGIScriptAlias / /home/vagrant/flask_temperaturas/wsgi.py process-group=flask_temp
    &amp;lt;Directory /home/vagrant/flask_temperaturas&amp;gt;
            Require all granted
    &amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Vamos a explicar la configuración:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;El &lt;code&gt;DocumentRoot&lt;/code&gt;se indica el directorio donde está la aplicación. Realmente el servidor web siempre va a llamar al fichero WSGI &lt;code&gt;wsgi.py&lt;/code&gt;, pero el DocumentRoot es necesario por si hay contenido estático.&lt;/li&gt;
&lt;li&gt;La directiva &lt;code&gt;WSGIDaemonProcess&lt;/code&gt;: Se define un grupo de procesos que se van a encargar de ejecutar la aplicación (servidor de aplicaciones). A estos procesos se le ponen un nombre (&lt;code&gt;flask_temp&lt;/code&gt;) y se indica los directorios donde se encuentran la aplicación y los paquetes necesarios (&lt;code&gt;python-path&lt;/code&gt;), como puedes observar se pone el directorio donde esta la aplicación y el directorio donde se encuentran los paquetes en el entorno virtual, separados por dos puntos.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WSGIProcessGroup&lt;/code&gt;: Nos permite agrupar procesos. Se pone el misimo nombre que hemos definido en la directiva anterior.&lt;/li&gt;
&lt;li&gt;La directiva &lt;code&gt;WSGIScriptAlias&lt;/code&gt; nos permite indicar que programa se va a ejecutar (el fichero WSGI: &lt;code&gt;/home/debian/flask_temperaturas/wsgi.py&lt;/code&gt;) cuando se haga una petición a la url &lt;code&gt;/&lt;/code&gt; y que proceso lo va a ejecutar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reinicia el servicio web y prueba el funcionamiento. Si te da algún erro 500 puedes ver los errores, en &lt;code&gt;/var/log/apache2/error.log&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Instalación base</title>
      <link>https://lmorillas.github.io/recursos-daw/docs/php/lamp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lmorillas.github.io/recursos-daw/docs/php/lamp/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Instalación entoro LAMP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wikipedia.org/wiki/LAMP&#34;&gt;https://es.wikipedia.org/wiki/LAMP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;El acrónimo &lt;strong&gt;LAMP&lt;/strong&gt; se refiere a un entorno configurado en un servidor que nos posibilita servir aplicaciones web escritas en PHP.&lt;/p&gt;
&lt;p&gt;Para ello usamos las siguientes tecnologías:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Linux&lt;/code&gt;, sistema operativo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Apache&lt;/code&gt; o &lt;code&gt;nginx&lt;/code&gt;, servidor web;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;MariaDB&lt;/code&gt;, gestores de bases de datos;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PHP&lt;/code&gt;, lenguaje de programación.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;instalación-base&#34;&gt;Instalación base&lt;/h2&gt;
&lt;h3 id=&#34;partimos-de-una-configuración-base&#34;&gt;Partimos de una configuración base&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vagrant init bento/ubuntu-20.04
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Edita el Vagrantile para hacer el forward del puerto 8080 al puerto 80&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;Vagrant&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vm&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;box&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bento/ubuntu-20.04&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vm&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;network&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;forwarded_port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;guest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8080&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Levanta y actualiza el sistema&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vagrant up
vagrant ssh
sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mariadb&#34;&gt;mariadb&lt;/h3&gt;
&lt;p&gt;Instalación del servidor de base de datos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install mariadb-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;apache-y-php&#34;&gt;Apache y PHP&lt;/h3&gt;
&lt;p&gt;Instalación de apache2 y del módulo que permite que apache2 interprete PHP (apache2 hará el papel de servidor web y de servidor de aplicaciones).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install apache2 libapache2-mod-php php php-mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;configuración-de-php&#34;&gt;Configuración de PHP&lt;/h3&gt;
&lt;p&gt;Archivos de configuración de PHP (según versión. En este caso 7.4):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/php/7.4/cli&lt;/code&gt;: Configuración de php para &lt;code&gt;php7.4-cli&lt;/code&gt; (ejecución de php desde la línea de comandos)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/php/7.4/apache2&lt;/code&gt;: Configuración de php para apache2 usado como módulo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/php/7.4/apache2/php.ini&lt;/code&gt;: Configuración de php&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/php/7.4/fpm&lt;/code&gt;: Configuración de php para php-fpm&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/php/7.4/mods-available&lt;/code&gt;: Módulos disponibles de php&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;comprobación&#34;&gt;Comprobación&lt;/h3&gt;
&lt;p&gt;Creamos un fichero &lt;code&gt;info.php&lt;/code&gt; en el &lt;code&gt;documentRoot&lt;/code&gt; (&lt;code&gt;/var/www/html&lt;/code&gt; ?) con el siguiente contenido:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;phpinfo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Accedemos con el navegador. Si no aparece la información de php y vemos el contenido que hemos escrito, es que no se ha instalado correctamente. Tendrías que ver algo similar a esto:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lmorillas.github.io/recursos-daw/Resources/phpinfo.png&#34; alt=&#34;phpinfo&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Instalación de WordPress</title>
      <link>https://lmorillas.github.io/recursos-daw/docs/php/wordpress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lmorillas.github.io/recursos-daw/docs/php/wordpress/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Primera parte. Guión instalación CMS Wordpress&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;qué-es&#34;&gt;Qué es?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wordpress.org/&#34;&gt;WordPress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Busca más información sobre este CMS&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;requisitos-para-la-instalación&#34;&gt;Requisitos para la instalación&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wordpress.org/about/requirements/&#34;&gt;https://es.wordpress.org/about/requirements/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anota los requisitos necesarios: servidor web, base de datos, etc.&lt;/p&gt;
&lt;h2 id=&#34;instalación&#34;&gt;Instalación&lt;/h2&gt;
&lt;p&gt;Esta es la guía oficial de instalación de WP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://es.wordpress.org/download/#download-install&#34;&gt;https://es.wordpress.org/download/#download-install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aquí tienes documentación más detallada&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wordpress.org/support/article/how-to-install-wordpress/&#34;&gt;https://wordpress.org/support/article/how-to-install-wordpress/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codex.wordpress.org/es:Instalando_WordPress&#34;&gt;https://codex.wordpress.org/es:Instalando_WordPress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;manos-a-la-obra&#34;&gt;Manos a la obra&lt;/h2&gt;
&lt;p&gt;¿Serías capaz de instalarlo en tu propio servidor con estas instrucciones? Usa el que has creado en la sección anterior (Vagrant con Apache, MariaDB y PHP)&lt;/p&gt;
&lt;p&gt;Inténtalo y consulta tus problemas en el foro del curso.&lt;/p&gt;
&lt;p&gt;Mäs adelante mostraremos una guía de instalación de WP paso a paso.&lt;/p&gt;
&lt;h2 id=&#34;un-ejemplo-de-instalación&#34;&gt;Un ejemplo de instalación&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/muAKPiPqW6g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: Instalación de Drupal</title>
      <link>https://lmorillas.github.io/recursos-daw/docs/php/drupal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lmorillas.github.io/recursos-daw/docs/php/drupal/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo:&lt;/h2&gt;
&lt;p&gt;En esta tarea vas a instalar Drupal, un gestor de contenidos escrito en php.&lt;/p&gt;
&lt;p&gt;La tarea consiste en instalar el gestor de contenidos y documentar el proceso de instalación&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;conocimiento-previo&#34;&gt;Conocimiento previo&lt;/h2&gt;
&lt;p&gt;Para realizar la tarea necesitas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Servidor Ubuntu 20.04 configurado con vagrant para conexión ssh (ya lo hiciste en la tarea de wordpress)&lt;/li&gt;
&lt;li&gt;Saber qué es &lt;strong&gt;Drupal&lt;/strong&gt;. Busca información en internet sobre CMS Drupal (qué es, url principal del sitio, dónde está la documentación, etc).&lt;/li&gt;
&lt;li&gt;Tener una cuenta en github. Si no tienes una cuenta, ve a  &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt; y crea una cuenta. Busca información sobre qué es github y git.&lt;/li&gt;
&lt;li&gt;Tener unas nociones elementales de git.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;qué-tengo-que-hacer&#34;&gt;¿Qué tengo que hacer?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Instalar Drupal en el mismo servidor en el que instalaste Wordpress.&lt;/li&gt;
&lt;li&gt;La dirección de drupal será drupal.miservidor.com (configuralo en tu archivo hosts)&lt;/li&gt;
&lt;li&gt;Para los pasos de la instalación sigue las &lt;a href=&#34;https://www.drupal.org/docs/user_guide/en/installation-chapter.html&#34;&gt;instrucciones de la web oficial de drupal&lt;/a&gt; o &lt;a href=&#34;https://comoinstalar.me/como-instalar-drupal-en-ubuntu-20-04-lts/&#34;&gt;estas por ejemplo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Documenta todo lo que hagas y escríbelo en un archivo markdown. Aquí tienes la &lt;a href=&#34;https://docs.github.com/es/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax&#34;&gt;sintaxis básica&lt;/a&gt; . El archivo se llamara instalacion_drupal.md . Añade unas capturas de pantalla. Si usas un editor como Visual Studio, podrás previsualizar el documento en html.&lt;/li&gt;
&lt;li&gt;Crea un proyecto en github llamado instalaciones-daw. Y en una carpeta llamada drupal, coloca el texto y las imágenes de tu tutorial&lt;/li&gt;
&lt;li&gt;Como justificante de tu tarea tendrás que subir la dirección de tu repositorio instalaciones-daw de github.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Ejercicio 1 Evaluación</title>
      <link>https://lmorillas.github.io/recursos-daw/docs/soluciones/ejercicio1ev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lmorillas.github.io/recursos-daw/docs/soluciones/ejercicio1ev/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Una propuesta de solución al ejercicio de la primera evaluación:
&lt;a href=&#34;https://www.adistanciafparagon.es/mod/assign/view.php?id=46025&#34;&gt;https://www.adistanciafparagon.es/mod/assign/view.php?id=46025&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;Configuración de un servidor apache para que muestre las páginas web de 4 empresas&lt;/p&gt;
&lt;h2 id=&#34;descripción&#34;&gt;Descripción&lt;/h2&gt;
&lt;p&gt;Nos han encargado poner en marcha las webs de 4 empresas. Se trata de seguir todo el proceso necesario para que las webs sean accesibles en nuestro servidor:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Configuración de virtualbox/vagrant&lt;/li&gt;
&lt;li&gt;Instalación y configuración de apache&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tienes los archivos de cada web en los archivos adicionales de la actividad.&lt;/p&gt;
&lt;p&gt;Sigue todos los pasos necesarios para poner en funcionamiento las sitios web. Configura también el archivo hosts para simular los nombres de dominio.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cada web tendrá que verse con la url del nombre (zip) y con la url con www&lt;/li&gt;
&lt;li&gt;Por defecto no se permitirá el listado de archivos o ficheros de las carpetas del servidor.&lt;/li&gt;
&lt;li&gt;En la web relojesvex.com habrá un directorio /privado que será privado para el usuario admin con password vexReloj .&lt;/li&gt;
&lt;li&gt;En la web relojesvex.com crea un directorio /fotos en el que se podrán colgar fotos y ver el listado de archivos que hay en esa carpeta.&lt;/li&gt;
&lt;li&gt;Crea un index en la raiz de apache (localhost) que muestre los enlaces a los 4 sitios web.&lt;/li&gt;
&lt;li&gt;Cada sitio tendrá unos log de acceso y error específicos para poder depurar más fácil los errores.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;solución&#34;&gt;Solución&lt;/h2&gt;
&lt;h3 id=&#34;preparación-del-entorno-en-el-host&#34;&gt;Preparación del entorno en el host&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Preparación de Vagrant/Virtualbox con Ubuntu 20.04&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ vagrant init bento/ubuntu-20.04
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Vagrantfile&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Vagrant.configure(&amp;quot;2&amp;quot;) do |config|
  config.vm.box = &amp;quot;bento/ubuntu-20.04&amp;quot;
  config.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 80, host: 8080, host_ip: &amp;quot;127.0.0.1&amp;quot;
end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Copiar archivos de las webs&lt;/strong&gt;
Descargar y descomprimir:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.
├── Vagrantfile
└── webs
    ├── airspace.com
    ├── hugoflotts.com
    ├── jonathon.com
    └── relojesvex.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Editar archivo &lt;em&gt;hosts&lt;/em&gt; en el equipo principal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/hosts&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;127.0.0.1       localhost
127.0.0.1       airspace.com  www.airspace.com
127.0.0.1       hugoflotts.com www.hugoflotts.com
127.0.0.1       jonathon.com www.jonathon.com
127.0.0.1       relojesvex.com www.relojesvex.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Comprobamos que funciona bien&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ping airspace.com
PING airspace.com (127.0.0.1) 56(84) bytes of data.
64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.032 ms
64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.053 ms
...
$ ping www.airspace.com
PING airspace.com (127.0.0.1) 56(84) bytes of data.
64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.049 ms
64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.043 ms
...

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Levantar máquina virtual y conectar por ssh&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ vagrant up

$ vagrant ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El directorio &lt;strong&gt;/vagrant&lt;/strong&gt; de la máquina virutal mapea el directorio de nuestro vagrant en el host.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instalar apache&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo apt update
$ sudo apt install apache2
$ sudo systemctl  status apache2
● apache2.service - The Apache HTTP Server
     Loaded: loaded &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;/lib/systemd/system/apache2.service&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; enabled&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; vendor preset: enabled&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
     Active: active &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;running&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; since Fri 2022-03-11 15:47:43 UTC&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; 29s ago
       Docs: https://httpd.apache.org/docs/2.4/
   Main PID: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;13490&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;apache2&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
      Tasks: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;55&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;limit: 1071&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
     Memory: 5.5M
     CGroup: /system.slice/apache2.service
             ├─13490 /usr/sbin/apache2 -k start
             ├─13491 /usr/sbin/apache2 -k start
             └─13492 /usr/sbin/apache2 -k start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Preparo enlace en /var/www&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ln -s /vagrant/webs/relojesvex.com /var/www/relojesvex.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Configurar VirutalHosts&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-apache2&#34; data-lang=&#34;apache2&#34;&gt;&amp;lt;VirtualHost *:80&amp;gt;
	DocumentRoot /var/www/relojesvex.com
    ServerName relojesvex.com
    ServerAlias www.relojesvex.com
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;$ sudo systemctl reload apache2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comprobamos el funcionamiento&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Desde el host apuntamos con el navegador a las webs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://localhost:8080&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://relojesvex.com:8080&#34;&gt;http://relojesvex.com:8080&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.relojesvex.com:8080&#34;&gt;http://www.relojesvex.com:8080&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>

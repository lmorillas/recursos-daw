<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Despliegue de Aplicaciones Web – Recursos</title><link>https://lmorillas.github.io/recursos-daw/docs/</link><description>Recent content in Recursos on Despliegue de Aplicaciones Web</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://lmorillas.github.io/recursos-daw/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Entorno básico con mod_wsgi</title><link>https://lmorillas.github.io/recursos-daw/docs/python/entorno-basico/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lmorillas.github.io/recursos-daw/docs/python/entorno-basico/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>¿Qué es WSGI?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configurar la aplicación &lt;a href="https://github.com/josedom24/flask_temperaturas">flask_temperaturas&lt;/a> para que sea servida con apache2 + mod_wsgi. Explica los pasos más importantes y entrega una prueba de funcionamiento.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Documentación original: &lt;a href="https://fp.josedomingo.org/iaw2122/u03/modwsgi.html">https://fp.josedomingo.org/iaw2122/u03/modwsgi.html&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="documentación">Documentación&lt;/h2>
&lt;p>&lt;strong>¿Qué es WSGI?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface">https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://entrenamiento-frameworks-web-python.readthedocs.io/es/latest/leccion4/introduccion_wsgi.html">https://entrenamiento-frameworks-web-python.readthedocs.io/es/latest/leccion4/introduccion_wsgi.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="pasos-instalación">Pasos instalación&lt;/h2>
&lt;p>Levanta una nueva máquina vagrant Ubuntu-20.04 e instala apache2, git, python3 y python3-venv&lt;/p>
&lt;h3 id="clonar-el-repositorio">Clonar el repositorio&lt;/h3>
&lt;p>En &lt;strong>/home/vagrant/&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/josedom24/flask_temperaturas.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="prepara-máquina-virtual-para-entornos-de-python">Prepara máquina virtual para entornos de python&lt;/h3>
&lt;p>En &lt;strong>/home/vagrant/&lt;/strong> ejecuta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python3 -m venv env &lt;span style="color:#8f5902;font-style:italic"># Crea un entorno virtual&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#204a87">source&lt;/span> env/bin/activate &lt;span style="color:#8f5902;font-style:italic"># Activa el entorno virtual&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#204a87">cd&lt;/span> flask_temperaturas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pip install -r requirements.txt &lt;span style="color:#8f5902;font-style:italic"># Instala dependencias&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="instala-y-configura-el-módulo-wsgi-para-apache2">Instala y configura el módulo wsgi para apache2&lt;/h3>
&lt;pre>&lt;code>apt install libapache2-mod-wsgi-py3
&lt;/code>&lt;/pre>
&lt;p>Activa el módulo wsgi
Nuestra aplicación se encuentra en &lt;code>/home/vagrant/flask_temperaturas&lt;/code>.
Nuestro entorno virtual está en &lt;code>/home/vagrant/env&lt;/code>.&lt;/p>
&lt;h3 id="creación-del-fichero-wsgi">Creación del fichero wsgi&lt;/h3>
&lt;p>Lo primero que vamos a hacer es crear el fichero WSGI, que vamos a llamar &lt;code>wsgi.py&lt;/code> estará en &lt;code>/home/vagrant/flask_temperaturas&lt;/code> y tendrá el siguiente contenido:&lt;/p>
&lt;pre>&lt;code>from app import app as application
&lt;/code>&lt;/pre>
&lt;p>Explicación:&lt;/p>
&lt;ul>
&lt;li>El primer &lt;code>app&lt;/code> corresponde con el nombre del módulo, es decir del fichero del programa, en nuestro caso se llama &lt;code>app.py&lt;/code>.&lt;/li>
&lt;li>El segundo &lt;code>app&lt;/code> corresponde a la aplicación flask creada en &lt;code>app.py&lt;/code>: &lt;code>app = Flask(__name__)&lt;/code>.&lt;/li>
&lt;li>Importamos la aplicación flask, pero la llamamos &lt;code>application&lt;/code> necesario para que el servidor web pueda enviarle peticiones.&lt;/li>
&lt;/ul>
&lt;h3 id="configuración-de-apache2">Configuración de apache2&lt;/h3>
&lt;p>Yo he utilizado el virtualhost por defecto, si usamos otro virtualhost esta configuración ira en el fichero correspondiente:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-apache2" data-lang="apache2"> WSGIDaemonProcess flask_temp python-path=/home/vagrant/flask_temperaturas:/home/vagrant/env/lib/python3.9/site-packages
WSGIProcessGroup flask_temp
WSGIScriptAlias / /home/vagrant/flask_temperaturas/wsgi.py process-group=flask_temp
&amp;lt;Directory /home/vagrant/flask_temperaturas&amp;gt;
Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Vamos a explicar la configuración:&lt;/p>
&lt;ul>
&lt;li>El &lt;code>DocumentRoot&lt;/code>se indica el directorio donde está la aplicación. Realmente el servidor web siempre va a llamar al fichero WSGI &lt;code>wsgi.py&lt;/code>, pero el DocumentRoot es necesario por si hay contenido estático.&lt;/li>
&lt;li>La directiva &lt;code>WSGIDaemonProcess&lt;/code>: Se define un grupo de procesos que se van a encargar de ejecutar la aplicación (servidor de aplicaciones). A estos procesos se le ponen un nombre (&lt;code>flask_temp&lt;/code>) y se indica los directorios donde se encuentran la aplicación y los paquetes necesarios (&lt;code>python-path&lt;/code>), como puedes observar se pone el directorio donde esta la aplicación y el directorio donde se encuentran los paquetes en el entorno virtual, separados por dos puntos.&lt;/li>
&lt;li>&lt;code>WSGIProcessGroup&lt;/code>: Nos permite agrupar procesos. Se pone el misimo nombre que hemos definido en la directiva anterior.&lt;/li>
&lt;li>La directiva &lt;code>WSGIScriptAlias&lt;/code> nos permite indicar que programa se va a ejecutar (el fichero WSGI: &lt;code>/home/debian/flask_temperaturas/wsgi.py&lt;/code>) cuando se haga una petición a la url &lt;code>/&lt;/code> y que proceso lo va a ejecutar.&lt;/li>
&lt;/ul>
&lt;p>Reinicia el servicio web y prueba el funcionamiento. Si te da algún erro 500 puedes ver los errores, en &lt;code>/var/log/apache2/error.log&lt;/code>.&lt;/p></description></item><item><title>Docs: Instalación base</title><link>https://lmorillas.github.io/recursos-daw/docs/php/lamp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lmorillas.github.io/recursos-daw/docs/php/lamp/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;ul>
&lt;li>Instalación entoro LAMP&lt;/li>
&lt;li>&lt;a href="https://es.wikipedia.org/wiki/LAMP">https://es.wikipedia.org/wiki/LAMP&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>El acrónimo &lt;strong>LAMP&lt;/strong> se refiere a un entorno configurado en un servidor que nos posibilita servir aplicaciones web escritas en PHP.&lt;/p>
&lt;p>Para ello usamos las siguientes tecnologías:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Linux&lt;/code>, sistema operativo;&lt;/li>
&lt;li>&lt;code>Apache&lt;/code> o &lt;code>nginx&lt;/code>, servidor web;&lt;/li>
&lt;li>&lt;code>MySQL&lt;/code>, &lt;code>MariaDB&lt;/code>, gestores de bases de datos;&lt;/li>
&lt;li>&lt;code>PHP&lt;/code>, lenguaje de programación.&lt;/li>
&lt;/ul>
&lt;h2 id="instalación-base">Instalación base&lt;/h2>
&lt;h3 id="partimos-de-una-configuración-base">Partimos de una configuración base&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vagrant init bento/ubuntu-22.04
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edita el Vagrantile para hacer el forward del puerto 8080 al puerto 80 por ejemplo&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">Vagrant&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">configure&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">vm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">box&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;bento/ubuntu-22.04&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">vm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">network&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;forwarded_port&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">guest&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Levanta y actualiza el sistema&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vagrant up
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vagrant ssh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="mariadb">mariadb&lt;/h3>
&lt;p>Instalación del servidor de base de datos&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt install mariadb-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Por defecto el usuario root no tiene contraseña, para acceder necesitaremos hacer con el root del sistema. Es muy recomendable ejecutar el programa &lt;code>mariadb-secure-installation&lt;/code> para configurar la base de datos de manera segura, por ejemplo para indicar una contraseña al root.&lt;/p>
&lt;p>Si necesitas crear una base de datos y un usuario que tenga acceso a la misma:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> mysql -u root -p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CREATE DATABASE newdb&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CREATE USER &lt;span style="color:#4e9a06">&amp;#39;username&amp;#39;&lt;/span>@&lt;span style="color:#4e9a06">&amp;#39;localhost&amp;#39;&lt;/span> IDENTIFIED BY &lt;span style="color:#4e9a06">&amp;#39;userpassword&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GRANT ALL PRIVILEGES ON newdb.* to &lt;span style="color:#4e9a06">&amp;#39;username&amp;#39;&lt;/span>@&lt;span style="color:#4e9a06">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FLUSH PRIVILEGES&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> quit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="apache-y-php">Apache y PHP&lt;/h3>
&lt;p>Instalación de apache2 y del módulo que permite que apache2 interprete PHP (apache2 hará el papel de servidor web y de servidor de aplicaciones).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt install apache2 libapache2-mod-php php php-mysql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configuración-de-php">Configuración de PHP&lt;/h3>
&lt;p>Archivos de configuración de PHP (según versión. En este caso 7.4, que serguramente es más antigua):&lt;/p>
&lt;ul>
&lt;li>&lt;code>/etc/php/7.4/cli&lt;/code>: Configuración de php para &lt;code>php7.4-cli&lt;/code> (ejecución de php desde la línea de comandos)&lt;/li>
&lt;li>&lt;code>/etc/php/7.4/apache2&lt;/code>: Configuración de php para apache2 usado como módulo&lt;/li>
&lt;li>&lt;code>/etc/php/7.4/apache2/php.ini&lt;/code>: Configuración de php&lt;/li>
&lt;li>&lt;code>/etc/php/7.4/fpm&lt;/code>: Configuración de php para php-fpm&lt;/li>
&lt;li>&lt;code>/etc/php/7.4/mods-available&lt;/code>: Módulos disponibles de php&lt;/li>
&lt;/ul>
&lt;h3 id="comprobación">Comprobación&lt;/h3>
&lt;p>Creamos un fichero &lt;code>info.php&lt;/code> en el &lt;code>documentRoot&lt;/code> (&lt;code>/var/www/html&lt;/code> ) con el siguiente contenido:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span>&lt;span style="color:#000">php&lt;/span> &lt;span style="color:#000">phpinfo&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span> &lt;span style="color:#8f5902;font-style:italic">?&amp;gt;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Accedemos con el navegador. Si no aparece la información de php y vemos el contenido que hemos escrito, es que no se ha instalado correctamente. Tendrías que ver algo similar a esto:&lt;/p>
&lt;p>Ahora podemos acceder a la URL: &lt;code>http://localhost:8080/info.php&lt;/code>&lt;/p>
&lt;p>Si tenemos problemas de acceso podemos ver los logs del servidor. El fichero de logs de acceso por “defecto”: &lt;code>/var/log/apache/access.log&lt;/code> o el de errores: &lt;code>/var/log/apache/error.log&lt;/code>&lt;/p>
&lt;p>También podemos ver los logs del servicio ejecutando: &lt;code>sudo journalctl -u apache2&lt;/code>&lt;/p>
&lt;h2 id="instalación-desatendida">Instalación desatendida&lt;/h2>
&lt;p>Si ha funcionado esta instalación manual y atendida, destruye el entorno y haz que se genere toda la instalación de forma automática cuando ejecutas &lt;code>vagrant up&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>Tienes que usar un &lt;code>bootstrap.sh&lt;/code> que ejecute tus comandos. Busca ejemplos en internet o usa ChatGPT si tienes dudas.
Se trata de que no tengas que perder tiempo ejecutando comandos cuando hagas una nueva instalación.&lt;/p>
&lt;/blockquote>
&lt;h2 id="readmemd">README.md&lt;/h2>
&lt;p>Elimina el contenido del fichero README.md del repositorio y crea uno nuevo con la documentación (recuerda que tiene que estar escrito en markdown) de todo el proceso de instalación. Incluye también las instrucciones para que alguien pueda usar el repositorio y usar tu instalación de php.&lt;/p></description></item><item><title>Docs: Instalación de Bookmedic</title><link>https://lmorillas.github.io/recursos-daw/docs/php/bookmedic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lmorillas.github.io/recursos-daw/docs/php/bookmedic/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Fuente: &lt;a href="https://fp.josedomingo.org/iaw2223/2_php/t3.html">https://fp.josedomingo.org/iaw2223/2_php/t3.html&lt;/a>&lt;/p>
&lt;/div>
&lt;h2 id="objetivo">Objetivo:&lt;/h2>
&lt;ul>
&lt;li>Desplegar una aplicación PHP construida a medida en tu servidor LAMP.&lt;/li>
&lt;/ul>
&lt;h2 id="recuerda">Recuerda&lt;/h2>
&lt;p>Como ya sabemos tenemos 3 maneras principales para ejecutar código PHP:&lt;/p>
&lt;ol>
&lt;li>Desde la línea de comandos (&lt;strong>cli&lt;/strong>).&lt;/li>
&lt;li>Con el servidor web &lt;strong>Apache2&lt;/strong> y el módulo &lt;strong>libapache2-mod-php&lt;/strong>.&lt;/li>
&lt;li>Con un servidor web y el servidor de aplicaciones &lt;strong>fpm-php&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>La configuración de php está dividida según desde donde se use (este ejemplo es para php 7.4):&lt;/p>
&lt;ul>
&lt;li>&lt;code>/etc/php/7.4/cli&lt;/code>: Configuración de php para &lt;code>php7.4-cli&lt;/code>, cuando se utiliza php desde la línea de comandos.&lt;/li>
&lt;li>&lt;code>/etc/php/7.4/apache2&lt;/code>: Configuración de php para apache2 cuando utiliza el módulo.&lt;/li>
&lt;li>&lt;code>/etc/php/7.4/fpm&lt;/code>: Configuración de php para php-fpm.&lt;/li>
&lt;li>&lt;code>/etc/php/7.4/mods-available&lt;/code>: Módulos disponibles de php que puedes estar configurados en cualquiera de los escenarios anteriores.&lt;/li>
&lt;/ul>
&lt;p>Si nos fijamos en la configuración de php para apache2 con el módulo:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/etc/php/7.4/apache2/conf.d&lt;/code>: Módulos instalados en esta configuración de php (enlaces simbólicos a &lt;code>/etc/php/7.4/mods-available&lt;/code>).&lt;/li>
&lt;li>&lt;code>/etc/php/7.4/apache2/php.ini&lt;/code>: Configuración de php para este escenario.&lt;/li>
&lt;/ul>
&lt;h2 id="qué-tienes-que-hacer">¿Qué tienes que hacer?&lt;/h2>
&lt;p>A partir de una instalación básica de Apache + MariaDB + PHP, tienes que instalar la aplicación BookMedik, una aplicación web a medida para llevar el control de citas médicas, pacientes, médicos, historiales de citas, áreas médicas y mucho mas, pensado para centros médicos, clínicas y médicos independientes. Puedes encontrar la aplicación en &lt;a href="https://github.com/evilnapsis/bookmedik">https://github.com/evilnapsis/bookmedik&lt;/a>.&lt;/p>
&lt;p>Para realizar la instalación sigue los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>Crea la base de datos y las tablas necesarias recuperando la copia de seguridad de la base de datos que encuentras en el fichero &lt;code>schema.sql&lt;/code>. Se creará una base de datos llamada &lt;code>bookmedik&lt;/code>. Crea un usuario que tenga privilegios sobre dicha base de datos.&lt;/li>
&lt;li>Crea un virtualhost con el que accederás con el nombre &lt;code>bookmedik.tunombre.org&lt;/code>. Copia en el &lt;em>DocumentRoot&lt;/em> los ficheros de la aplicación (podrías clonar el repositorio en el &lt;em>DocumentRoot&lt;/em>).&lt;/li>
&lt;li>Vamos a configurar el acceso a la base de datos desde la aplicación, para ello cambia el fichero &lt;code>core\controller\Database.php&lt;/code> indicando el usuario de acceso (el que has creado en el punto 1), su contraseña, la base de datos que se llama &lt;code>bookmedik&lt;/code> y la dirección donde se encuentra la base de datos, que en este caso es &lt;code>localhost&lt;/code>.&lt;/li>
&lt;li>Accede a la aplicación web usando la URL configurada en el virtualhost (usa el usuario &lt;code>admin&lt;/code> y contraseña &lt;code>admin&lt;/code>).&lt;/li>
&lt;li>Para esta aplicación no es necesario, pero en determinadas aplicaciones es posible que necesitemos cambiar la memoria RAM que puede utilizar. Cambia la memoria máxima de uso de un script PHP (parámetro &lt;code>memory_limit&lt;/code>) a 256Mb. ¿En qué fichero lo tienes que cambiar?. Investiga.&lt;/li>
&lt;/ol>
&lt;p>Una vez que esté la aplicación funcionando, configura un archivo &lt;code>bootstrap.sh&lt;/code> que instale la aplicación automáticamente.&lt;/p></description></item><item><title>Docs: Despliegue con Gunicorn</title><link>https://lmorillas.github.io/recursos-daw/docs/python/gunicorn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lmorillas.github.io/recursos-daw/docs/python/gunicorn/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Despliegue de una web con &lt;strong>gunicorn&lt;/strong> y un proxy inverso&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Qué es un &lt;a href="https://es.wikipedia.org/wiki/Proxy_inverso">proxy inverso&lt;/a>?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configurar la aplicación &lt;a href="https://github.com/josedom24/flask_temperaturas">flask_temperaturas&lt;/a> para que sea servida con apache2 + gunicorn&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Documentación original: &lt;a href="https://fp.josedomingo.org/iaw2122/u03/gunicorn.html">https://fp.josedomingo.org/iaw2122/u03/gunicorn.html&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="documentación">Documentación&lt;/h2>
&lt;p>Gunicorn es un servidor web que permite ejecutar una aplicación en un proceso independiente. Usamos los servidores web como proxies inversos que envían la petición python al servidor WSGI que estemos utilizando&lt;/p>
&lt;h2 id="configuración-vagrant">Configuración Vagrant&lt;/h2>
&lt;p>Configura el forward del puerto 8080 al puerto 8080 de la máquina virtual&lt;/p>
&lt;h2 id="instalar-gunicorn">Instalar Gunicorn&lt;/h2>
&lt;p>En &lt;strong>/home/vagrant/&lt;/strong>&lt;/p>
&lt;p>Activa en entorno virtual&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">source&lt;/span> env/bin/activate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip install gunicorn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>env&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> /home/vagrant/flask_temperaturas$ gunicorn -w &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> -b :8080 wsgi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Comprueba con tu navegador que puedes acceder al puerto 8080 y que responde ahora gunicorn&lt;/p>
&lt;h2 id="sigue-la-documentación-basehttpsfpjosedomingoorgiaw2122u03gunicornhtm">Sigue la &lt;a href="https://fp.josedomingo.org/iaw2122/u03/gunicorn.htm">documentación base&lt;/a>&lt;/h2>
&lt;p>&lt;em>Atento porque puede cambiar alguna dirección&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Crea un servicio en systemd&lt;/li>
&lt;li>Activa e inicia el servicio&lt;/li>
&lt;li>Configura Apache2 compo un proxy inverso.&lt;/li>
&lt;/ul>
&lt;p>Comprueba con tu navegador que puedes acceder al puerto 8000 y que resonde apache. Elimina el forward del puerto 8080 y reinicia vagrant. Comprueba que la aplicación sigue funcionando.&lt;/p></description></item></channel></rss>